////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WARNING: This file is auto-generated from Open Data Fabric Schemas
// See: http://opendatafabric.org/
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct Timestamp {
  year: int32;
  ordinal: uint16;
  seconds_from_midnight: uint32;
  nanoseconds: uint32;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OffsetInterval
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#offsetinterval-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table OffsetInterval {
  start: uint64;
  end: uint64;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DataSlice
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#dataslice-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table DataSlice {
  logical_hash: [ubyte];
  physical_hash: [ubyte];
  offset_interval: OffsetInterval;
  size: uint64;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Checkpoint
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#checkpoint-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table Checkpoint {
  physical_hash: [ubyte];
  size: uint64;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SourceState
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourcestate-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SourceState {
  source_name: string;
  kind: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AddData
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#adddata-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table AddData {
  prev_checkpoint: [ubyte];
  prev_offset: uint64 = null;
  new_data: DataSlice;
  new_checkpoint: Checkpoint;
  new_watermark: Timestamp;
  new_source_state: SourceState;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepCsv
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepcsv-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepCsv {
  schema: [string];
  separator: string;
  encoding: string;
  quote: string;
  escape: string;
  header: bool = null;
  infer_schema: bool = null;
  null_value: string;
  date_format: string;
  timestamp_format: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepGeoJson
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepgeojson-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepGeoJson {
  schema: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepEsriShapefile
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepesrishapefile-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepEsriShapefile {
  schema: [string];
  sub_path: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepParquet
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepparquet-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepParquet {
  schema: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepJson
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepjson-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepJson {
  sub_path: string;
  schema: [string];
  date_format: string;
  encoding: string;
  timestamp_format: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepNdJson
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepndjson-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepNdJson {
  schema: [string];
  date_format: string;
  encoding: string;
  timestamp_format: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStepNdGeoJson
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstepndgeojson-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ReadStepNdGeoJson {
  schema: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ReadStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#readstep-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union ReadStep {
  ReadStepCsv,
  ReadStepGeoJson,
  ReadStepEsriShapefile,
  ReadStepParquet,
  ReadStepJson,
  ReadStepNdJson,
  ReadStepNdGeoJson,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SqlQueryStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sqlquerystep-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SqlQueryStep {
  alias: string;
  query: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TemporalTable
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#temporaltable-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TemporalTable {
  name: string;
  primary_key: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformSql
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformsql-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformSql {
  engine: string;
  version: string;
  query: string;
  queries: [SqlQueryStep];
  temporal_tables: [TemporalTable];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Transform
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transform-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union Transform {
  TransformSql,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MergeStrategyAppend
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mergestrategyappend-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table MergeStrategyAppend {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MergeStrategyLedger
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mergestrategyledger-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table MergeStrategyLedger {
  primary_key: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MergeStrategySnapshot
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mergestrategysnapshot-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table MergeStrategySnapshot {
  primary_key: [string];
  compare_columns: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MergeStrategy
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mergestrategy-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union MergeStrategy {
  MergeStrategyAppend,
  MergeStrategyLedger,
  MergeStrategySnapshot,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AddPushSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#addpushsource-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table AddPushSource {
  source_name: string;
  read: ReadStep;
  preprocess: Transform;
  merge: MergeStrategy;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AttachmentEmbedded
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#attachmentembedded-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table AttachmentEmbedded {
  path: string;
  content: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AttachmentsEmbedded
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#attachmentsembedded-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table AttachmentsEmbedded {
  items: [AttachmentEmbedded];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Attachments
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#attachments-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union Attachments {
  AttachmentsEmbedded,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CompressionFormat
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#compressionformat-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum CompressionFormat: int32 {
  Gzip,
  Zip,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DatasetKind
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#datasetkind-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum DatasetKind: int32 {
  Root,
  Derivative,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExecuteTransformInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executetransforminput-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ExecuteTransformInput {
  dataset_id: [ubyte];
  prev_block_hash: [ubyte];
  new_block_hash: [ubyte];
  prev_offset: uint64 = null;
  new_offset: uint64 = null;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ExecuteTransform
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#executetransform-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table ExecuteTransform {
  query_inputs: [ExecuteTransformInput];
  prev_checkpoint: [ubyte];
  prev_offset: uint64 = null;
  new_data: DataSlice;
  new_checkpoint: Checkpoint;
  new_watermark: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Seed
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#seed-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table Seed {
  dataset_id: [ubyte];
  dataset_kind: DatasetKind;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EventTimeSourceFromMetadata
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#eventtimesourcefrommetadata-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table EventTimeSourceFromMetadata {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EventTimeSourceFromPath
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#eventtimesourcefrompath-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table EventTimeSourceFromPath {
  pattern: string;
  timestamp_format: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EventTimeSourceFromSystemTime
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#eventtimesourcefromsystemtime-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table EventTimeSourceFromSystemTime {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EventTimeSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#eventtimesource-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union EventTimeSource {
  EventTimeSourceFromMetadata,
  EventTimeSourceFromPath,
  EventTimeSourceFromSystemTime,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SourceCachingForever
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourcecachingforever-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SourceCachingForever {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SourceCaching
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourcecaching-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union SourceCaching {
  SourceCachingForever,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RequestHeader
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#requestheader-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RequestHeader {
  name: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStepUrl
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstepurl-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table FetchStepUrl {
  url: string;
  event_time: EventTimeSource;
  cache: SourceCaching;
  headers: [RequestHeader];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SourceOrdering
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#sourceordering-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum SourceOrdering: int32 {
  ByEventTime,
  ByName,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStepFilesGlob
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstepfilesglob-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table FetchStepFilesGlob {
  path: string;
  event_time: EventTimeSource;
  cache: SourceCaching;
  order: SourceOrdering = null;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// EnvVar
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#envvar-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table EnvVar {
  name: string;
  value: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStepContainer
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstepcontainer-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table FetchStepContainer {
  image: string;
  command: [string];
  args: [string];
  env: [EnvVar];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MqttQos
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mqttqos-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

enum MqttQos: int32 {
  AtMostOnce,
  AtLeastOnce,
  ExactlyOnce,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MqttTopicSubscription
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#mqtttopicsubscription-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table MqttTopicSubscription {
  path: string;
  qos: MqttQos = null;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStepMqtt
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstepmqtt-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table FetchStepMqtt {
  host: string;
  port: int32;
  username: string;
  password: string;
  topics: [MqttTopicSubscription];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStepEthereumLogs
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstepethereumlogs-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table FetchStepEthereumLogs {
  chain_id: uint64 = null;
  node_url: string;
  filter: string;
  signature: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FetchStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#fetchstep-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union FetchStep {
  FetchStepUrl,
  FetchStepFilesGlob,
  FetchStepContainer,
  FetchStepMqtt,
  FetchStepEthereumLogs,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PrepStepDecompress
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#prepstepdecompress-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table PrepStepDecompress {
  format: CompressionFormat;
  sub_path: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PrepStepPipe
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#prepsteppipe-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table PrepStepPipe {
  command: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// PrepStep
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#prepstep-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union PrepStep {
  PrepStepDecompress,
  PrepStepPipe,
}

table PrepStepWrapper {
  value: PrepStep;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetPollingSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setpollingsource-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetPollingSource {
  fetch: FetchStep;
  prepare: [PrepStepWrapper];
  read: ReadStep;
  preprocess: Transform;
  merge: MergeStrategy;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transforminput-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformInput {
  dataset_ref: string;
  alias: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetTransform
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#settransform-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetTransform {
  inputs: [TransformInput];
  transform: Transform;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetVocab
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setvocab-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetVocab {
  offset_column: string;
  operation_type_column: string;
  system_time_column: string;
  event_time_column: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetAttachments
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setattachments-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetAttachments {
  attachments: Attachments;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetInfo
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setinfo-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetInfo {
  description: string;
  keywords: [string];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetLicense
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setlicense-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetLicense {
  short_name: string;
  name: string;
  spdx_id: string;
  website_url: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SetDataSchema
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#setdataschema-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table SetDataSchema {
  schema: [ubyte];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DisablePushSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#disablepushsource-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table DisablePushSource {
  source_name: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DisablePollingSource
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#disablepollingsource-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table DisablePollingSource {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetadataEvent
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#metadataevent-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

union MetadataEvent {
  AddData,
  ExecuteTransform,
  Seed,
  SetPollingSource,
  SetTransform,
  SetVocab,
  SetAttachments,
  SetInfo,
  SetLicense,
  SetDataSchema,
  AddPushSource,
  DisablePushSource,
  DisablePollingSource,
}

table MetadataEventWrapper {
  value: MetadataEvent;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DatasetSnapshot
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#datasetsnapshot-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table DatasetSnapshot {
  name: string;
  kind: DatasetKind;
  metadata: [MetadataEventWrapper];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DatasetVocabulary
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#datasetvocabulary-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table DatasetVocabulary {
  offset_column: string;
  operation_type_column: string;
  system_time_column: string;
  event_time_column: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Manifest
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#manifest-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table Manifest {
  kind: int64;
  version: int32;
  content: [ubyte];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// MetadataBlock
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#metadatablock-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table MetadataBlock {
  system_time: Timestamp;
  prev_block_hash: [ubyte];
  sequence_number: uint64;
  event: MetadataEvent;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryRequest
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryrequest-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryRequest {
  input_data_paths: [string];
  transform: Transform;
  output_data_path: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryResponseProgress
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryresponseprogress-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryResponseProgress {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryResponseSuccess
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryresponsesuccess-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryResponseSuccess {
  num_records: uint64;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryResponseInvalidQuery
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryresponseinvalidquery-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryResponseInvalidQuery {
  message: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryResponseInternalError
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryresponseinternalerror-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryResponseInternalError {
  message: string;
  backtrace: string;
}

union RawQueryResponse {
  RawQueryResponseProgress,
  RawQueryResponseSuccess,
  RawQueryResponseInvalidQuery,
  RawQueryResponseInternalError,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RawQueryResponseRoot
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#rawqueryresponseroot-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table RawQueryResponseRoot {
  value: RawQueryResponse;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Watermark
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#watermark-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table Watermark {
  system_time: Timestamp;
  event_time: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformRequestInput
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformrequestinput-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformRequestInput {
  dataset_id: [ubyte];
  dataset_alias: string;
  query_alias: string;
  vocab: DatasetVocabulary;
  offset_interval: OffsetInterval;
  data_paths: [string];
  schema_file: string;
  explicit_watermarks: [Watermark];
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformRequest
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformrequest-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformRequest {
  dataset_id: [ubyte];
  dataset_alias: string;
  system_time: Timestamp;
  vocab: DatasetVocabulary;
  transform: Transform;
  query_inputs: [TransformRequestInput];
  next_offset: uint64;
  prev_checkpoint_path: string;
  new_checkpoint_path: string;
  new_data_path: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformResponseProgress
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformresponseprogress-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformResponseProgress {
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformResponseSuccess
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformresponsesuccess-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformResponseSuccess {
  new_offset_interval: OffsetInterval;
  new_watermark: Timestamp;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformResponseInvalidQuery
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformresponseinvalidquery-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformResponseInvalidQuery {
  message: string;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformResponseInternalError
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformresponseinternalerror-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformResponseInternalError {
  message: string;
  backtrace: string;
}

union TransformResponse {
  TransformResponseProgress,
  TransformResponseSuccess,
  TransformResponseInvalidQuery,
  TransformResponseInternalError,
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// TransformResponseRoot
// https://github.com/kamu-data/open-data-fabric/blob/master/open-data-fabric.md#transformresponseroot-schema
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

table TransformResponseRoot {
  value: TransformResponse;
}

