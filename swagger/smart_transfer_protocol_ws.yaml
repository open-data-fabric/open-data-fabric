asyncapi: 2.5.0
info:
  title: ODF Smart Transfer Protocol
  version: '0.1.0'
  description: Open Data Fabric (ODF) extended protocol for dataset exchange between remote parties.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'

channels:

  dataset/pull/request:
    subscribe:
      operationId: odf.dataset.pull.request
      summary: Initiates dataset pull from the ODF server
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullRequest
        name: DatasetPullRequest
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - knownHead          
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            knownHead:
              type: string
              format: multihash
              description: Hash of the metadata head block known to the consumer

  dataset/pull/response:
    publish:
      operationId: odf.dataset.pull.response
      summary: Indicates succesfull response to dataset pull request
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullResponse
        name: DatasetPullResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - prevKnownHead
            - newBlocks
            - dataSlices
            - checkpoints
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            prevKnownHead:
              type: string
              format: multihash
              description: Hash of the metadata head block that was previously known to consumer
            newBlocks:
              $ref: '#/components/schemas/TarOfBlocks'
            dataSlices:
              type: array
              description: List of data slice file hashes referenced by the new blocks
              items:
                type: string
                format: multihash
            checkpoints:
              type: array
              description: List of checkpoint file hashes referenced by the new blocks
              items:
                type: string
                format: multihash
  
  dataset/pull/data/negotiate:
    subscribe:
      operationId: odf.dataset.pull.data.negotiate
      summary: Requests to negotiate data download protocol for 1 or more files
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullDataNegotiate
        name: DatasetPullDataNegotiate
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - dataFiles
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier     
            dataFiles:
              type: array
              description: List of data file references in this bulk
              items:
                $ref: '#/components/schemas/DataFileReference'
      
  dataset/pull/data/negotiate/response:
    publish:
      operationId: odf.dataset.pull.data.negotiate.response
      summary: Response on negotiated status of data operations during pull
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullDataNegotiateResponse
        name: DatasetPullDataNegotiateResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - negotiatedDownloads
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier        
            negotiatedDownloads:
              type: array
              description: Negotiated download operations for requested bulk of files
              items:
                $ref: '#/components/schemas/NegotiatedDownload'

  dataset/push/request:
    subscribe:
      operationId: odf.dataset.push.request
      summary: Initiates dataset push to the ODF server
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushRequest
        name: DatasetPushRequest
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - knownHead
            - newBlocks
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            knownHead:
              type: string
              format: multihash
              description: Hash of the metadata head block known to the pusher
            newBlocks:
              $ref: '#/components/schemas/TarOfBlocks'

  dataset/push/request/accepted:
    publish:
      operationId: odf.dataset.push.request.accepted
      summary: Informs about succesfull acceptance of dataset push request
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushRequestAccepted
        name: DatasetPushRequestAccepted
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier    
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow

  dataset/push/data/negotiate:
    subscribe:
      operationId: odf.dataset.push.data.negotiate
      summary: Requests to negotiate data upload protocol for 1 or more files
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushDataNegotiate
        name: DatasetPushDataNegotiate
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - dataFiles
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier     
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow
            dataFiles:
              type: array
              description: List of data file references in this bulk
              items:
                $ref: '#/components/schemas/DataFileReference'
      
  dataset/push/data/negotiate/response:
    publish:
      operationId: odf.dataset.push.data.negotiate.response
      summary: Response on negotiated status of data operations during push
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushDataNegotiateResponse
        name: DatasetPushDataNegotiateResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - negotiatedUploads
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier        
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow              
            negotiatedUploads:
              type: array
              description: Negotiated upload operations for requested bulk of files
              items:
                $ref: '#/components/schemas/NegotiatedUpload'

  dataset/push/complete:
    subscribe:
      operationId: odf.dataset.push.complete
      summary: Informs ODF-server the push operation is complete
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushComplete
        name: DatasetPushComplete
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
          datasetId:
            type: string
            format: did
            description: Dataset identifier       
          pushRequestId:
            type: string
            format: uuid
            description: Request identifier of the started push flow            

  dataset/push/complete/confirmed:
    publish:
      operationId: odf.dataset.push.complete.confirmed
      summary: Informs consumer the push completion is confirmed
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushCompleteConfirmed
        name: DatasetPushCompleteConfirmed
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - newHead
          datasetId:
            type: string
            format: did
            description: Dataset identifier          
          pushRequestId:
            type: string
            format: uuid
            description: Request identifier of the started push flow
          newHead:
            type: string
            format: multihash
            description: New dataset head block hash after completion of this push request

  dataset/error:
    publish:
      operationId: odf.dataset.error
      summary: Informs about error happened during one of API operations with the dataset
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetError
        name: DatasetError
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - errorDetails
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            errorDetails:
              $ref: '#/components/schemas/ErrorDetails'

components:
  schemas:
    TarOfBlocks:
      type: object
      description: An archive of blocks segment being transferred
      required:
        - blockCount
        - blockData
      properties:
        blockCount:
          type: integer
          minimum: 0
        blockData:
          type: string
          contentEncoding: base64
          contentMediaType: "application/tar"

    NegotiatedDownload:
      type: object
      required:
        - dataFile
        - downloadNegotiationStatus
      properties:
        dataFile:
          $ref: '#/components/schemas/DataFileReference'
        downloadNegotiationStatus:
          type: string
          enum: [UnexpectedFile, ProceedWithDownload]
        downloadFrom:
          $ref: '#/components/schemas/StorageReference'    

    NegotiatedUpload:
      type: object
      required:
        - dataFile
        - uploadNegotiationStatus
      properties:
        dataFile:
          $ref: '#/components/schemas/DataFileReference'
        uploadNegotiationStatus:
          type: string
          enum: [ExpectingUpload, SkipUpload]
        uploadTo:
          $ref: '#/components/schemas/StorageReference'    

    DataFileReference:
      type: object
      required:
        - fileKind
        - physicalHash
      properties:
        fileKind:
          $ref: '#/components/schemas/DataFileKind'
        physicalHash:
          type: string
          format: multihash    

    DataFileKind:
      type: string
      enum: [DataSlice, Checkpoint]

    StorageReference:
      type: object
      required:
        - provider
        - url
        - expiresAt
      properties:
        provider:
          type: string
          enum: [S3, GCS, ADLS]
        url:
          type: string
          format: url
        expiresAt:
          type: string
          format: date-time

    ErrorDetails:
      type: object
      description: Describes error happened during message processing
      required:
        - errorCode
        - description
      properties:
        errorCode:
          type: string
          description: Informative code of the error happened
        description:
          type: string
          description: Detailed description of the error happened
        extras:
          type: object
          description: Optional extra fields associated with an error

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
