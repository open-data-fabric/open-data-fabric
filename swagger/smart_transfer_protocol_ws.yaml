asyncapi: 2.5.0
info:
  title: ODF Smart Transfer Protocol
  version: '0.1.0'
  description: Open Data Fabric (ODF) extended protocol for dataset exchange between remote parties.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'

channels:

  dataset/pull/request:
    subscribe:
      operationId: odf.dataset.pull.request
      summary: Initiates dataset pull from the ODF server
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullRequest
        name: DatasetPullRequest
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            knownHead:
              type: string
              format: multihash
              description: Hash of the metadata head block known to the consumer, undefined initially

  dataset/pull/response:
    publish:
      operationId: odf.dataset.pull.response
      summary: Indicates succesfull response to dataset pull request
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullResponse
        name: DatasetPullResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - prevKnownHead
            - newBlocks
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            prevKnownHead:
              type: string
              format: multihash
              description: Hash of the metadata head block that was previously known to consumer
            newBlocks:
              $ref: '#/components/schemas/ObjectsBatch'
  
  dataset/pull/objects/negotiate:
    subscribe:
      operationId: odf.dataset.pull.objects.negotiate
      summary: Requests to negotiate the download protocol for 1 or more object files
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullObjectsNegotiate
        name: DatasetPullObjectsNegotiate
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - objectFiles
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier     
            objectFiles:
              type: array
              description: List of object file references in this bulk
              items:
                $ref: '#/components/schemas/ObjectFileReference'
      
  dataset/pull/objects/negotiate/response:
    publish:
      operationId: odf.dataset.pull.objects.negotiate.response
      summary: Response on negotiated status of object download operations during pull
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPullObjectsNegotiateResponse
        name: DatasetPullObjectsNegotiateResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - negotiatedDownloads
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier        
            negotiatedDownloads:
              type: array
              description: Negotiated download operations for requested bulk of object files
              items:
                $ref: '#/components/schemas/NegotiatedDownload'

  dataset/push/request:
    subscribe:
      operationId: odf.dataset.push.request
      summary: Initiates dataset push to the ODF server
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushRequest
        name: DatasetPushRequest
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - newBlocks
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            newBlocks:
              $ref: '#/components/schemas/ObjectsBatch'

  dataset/push/request/accepted:
    publish:
      operationId: odf.dataset.push.request.accepted
      summary: Informs about succesfull acceptance of dataset push request
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushRequestAccepted
        name: DatasetPushRequestAccepted
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier    
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow

  dataset/push/objects/negotiate:
    subscribe:
      operationId: odf.dataset.push.objects.negotiate
      summary: Requests to negotiate the upload protocol for 1 or more object files
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushObjectsNegotiate
        name: DatasetPushObjectsNegotiate
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - objectFiles
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier     
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow
            objectFiles:
              type: array
              description: List of object file references in this bulk
              items:
                $ref: '#/components/schemas/ObjectFileReference'
      
  dataset/push/objects/negotiate/response:
    publish:
      operationId: odf.dataset.push.objects.negotiate.response
      summary: Response on negotiated status of object upload operations during push
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushObjectNegotiateResponse
        name: DatasetPushObjectNegotiateResponse
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - negotiatedUploads
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier        
            pushRequestId:
              type: string
              format: uuid
              description: Request identifier of the started push flow              
            negotiatedUploads:
              type: array
              description: Negotiated upload operations for requested bulk of object files
              items:
                $ref: '#/components/schemas/NegotiatedUpload'

  dataset/push/complete:
    subscribe:
      operationId: odf.dataset.push.complete
      summary: Informs ODF-server the push operation is complete
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushComplete
        name: DatasetPushComplete
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
          datasetId:
            type: string
            format: did
            description: Dataset identifier       
          pushRequestId:
            type: string
            format: uuid
            description: Request identifier of the started push flow            

  dataset/push/complete/confirmed:
    publish:
      operationId: odf.dataset.push.complete.confirmed
      summary: Informs consumer the push completion is confirmed
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetPushCompleteConfirmed
        name: DatasetPushCompleteConfirmed
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - pushRequestId
            - newHead
          datasetId:
            type: string
            format: did
            description: Dataset identifier          
          pushRequestId:
            type: string
            format: uuid
            description: Request identifier of the started push flow
          newHead:
            type: string
            format: multihash
            description: New dataset head block hash after completion of this push request

  dataset/error:
    publish:
      operationId: odf.dataset.error
      summary: Informs about error happened during one of API operations with the dataset
      security:
        - jwt: []
      message:
        messageId: odf.dataset.DatasetError
        name: DatasetError
        contentType: application/json
        payload:
          type: object
          required:
            - datasetId
            - errorDetails
          properties:
            datasetId:
              type: string
              format: did
              description: Dataset identifier
            errorDetails:
              $ref: '#/components/schemas/ErrorDetails'

components:
  schemas:
    ObjectsBatch:
      type: object
      description: An archive of blocks segment being transferred
      required:
        - objectsCount
        - objectType
        - mediaType
        - encoding
        - payload
      properties:
        objectsCount:
          type: integer
          minimum: 0
          description: Number of objects included in the batch
        objectType:
          type: string
          example: "MetadataBlock"
          description: Type of objects included in the batch
        mediaType:
          type: string
          example: "application/tar"
          description: Payload media type
        encoding:
          type: string
          example: base64
          description: Payload encoding within the protocol
        payload:
          type: string
          description: Encoded payload data

    NegotiatedDownload:
      type: object
      required:
        - objectFile
        - downloadFrom
      properties:
        objectFile:
          $ref: '#/components/schemas/ObjectFileReference'
        downloadFrom:
          $ref: '#/components/schemas/StorageReference'    

    NegotiatedUpload:
      type: object
      required:
        - objectFile
        - uploadNegotiationStatus
      properties:
        objectFile:
          $ref: '#/components/schemas/ObjectFileReference'
        uploadNegotiationStatus:
          type: string
          enum: [ExpectingUpload, SkipUpload]
        uploadTo:
          $ref: '#/components/schemas/StorageReference'    

    ObjectFileReference:
      type: object
      required:
        - fileKind
        - physicalHash
      properties:
        fileKind:
          $ref: '#/components/schemas/ObjectFileKind'
        physicalHash:
          type: string
          format: multihash    

    ObjectFileKind:
      type: string
      enum: [DataSlice, Checkpoint]

    StorageReference:
      type: object
      required:
        - url
        - expiresAt
      properties:
        url:
          type: string
          format: url
        expiresAt:
          type: string
          format: date-time

    ErrorDetails:
      type: object
      description: Describes error happened during message processing
      required:
        - errorCode
        - description
      properties:
        errorCode:
          type: string
          description: Informative code of the error happened
        description:
          type: string
          description: Detailed description of the error happened
        extras:
          type: object
          description: Optional extra fields associated with an error

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
