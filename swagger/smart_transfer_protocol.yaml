openapi: 3.0.3

info:
  title: ODF Smart Transfer Protocol
  description:
    Open Data Fabric (ODF) extended protocol for dataset exchange between remote parties.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1


components:

  parameters:

    DatasetId:
      in: path
      name: datasetId
      description: Dataset identifier
      example: did:odf:z4k88e8rxU6m5wCnK9idM5sGAxAGfvUgNgQbckwJ4ro78tXMLSu
      required: true
      schema:
        $ref: '#/components/schemas/DatasetId'

    StartBlockHash:
      in: query
      name: startBlockHash
      description: Hash code of the starting block
      example: zW1qJPmDvBxGS9GeC7PFseSCy7koHjvurUmisf1VWscY3AX
      required: true
      schema:
        $ref: '#/components/schemas/MultiHash'

    TailBlockHash:
      in: query
      name: tailBlockHash
      description: Hash code of the tail block
      example: zW1qJPmDvBxGS9GeC7PFseSCy7koHjvurUmisf1VWscY3AX
      required: true
      schema:
        $ref: '#/components/schemas/MultiHash'

    BlocksCount:
      in: query
      name: blocksCount
      description: Max number of chained blocks to process. If not specified, unlimited.
      example: 5
      required: false
      schema:
        type: integer
        format: int32

  schemas:

    DatasetId:
      type: string
      format: did

    MultiHash:
      type: string
      format: multihash

    ListOfBlocks:
      type: array
      item:
        $ref: '../schemas/MetadataBlock.json'

    ListOfCheckpointInfos:
      type: array
      item:
        $ref: '#/components/schemas/CheckpointInfo'

    CheckpointInfo:
      type: object
      required:
        - checkpoint
        - storage
      checkpoint:
        $ref: '../schemas/fragments/Checkpoint'
      storage:
        $ref: '#/components/schemas/StorageReference'

    ListOfDataSliceInfos:
      type: array
      item:
        $ref: '#/components/schemas/DataSliceInfo'

    DataSliceInfo:
      type: object
      required:
        - slice
        - storage
      slice:    
        $ref: '../schemas/fragments/DataSlice'
      storage:
        $ref: '#/components/schemas/StorageReference'

    StorageReference:
      type: object
      required:
        - provider
        - url
      properties:
        provider:
          type: string
          enum: [S3, GCS, ADLS]
        url:
          type: string
          format: url

  responses:
    Error:
      description: Request error
      content:
        application/json:
          schema:
            type: object

  securitySchemes:
    odf_access_token:
      type: http
      scheme: bearer
      bearerFormat: org.odf.access_token

paths:

  /datasets/{datasetId}/head:
    get:
      operationId: rest.dataset.get_head
      security:
        - odf_access_token: []
      parameters:
        - $ref: '#/components/parameters/DatasetId'
      responses:
        200:
          description: Successfully fetched hash of the dataset head block
          content:
            application/json:
              schema:
                type: object
                required:
                  - head
                properties:
                  head:
                    $ref: '#/components/schemas/MultiHash'
        default:
          $ref: '#/components/responses/Error'

  /datasets/{datasetId}/blocks:
    get:
      operationId: rest.dataset.get_blocks
      security:
        - odf_access_token: []
      parameters:
        - $ref: '#/components/parameters/DatasetId'
        - $ref: '#/components/parameters/StartBlockHash'
        - $ref: '#/components/parameters/BlocksCount'
      responses:
        200:
          description: Successfully fetched requested block metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfBlocks'
        default:
          $ref: '#/components/responses/Error'


  /datasets/{datasetId}/blocks/between:
    get:
      operationId: rest.dataset.get_blocks_between
      security:
        - odf_access_token: []
      parameters:
        - $ref: '#/components/parameters/DatasetId'
        - $ref: '#/components/parameters/StartBlockHash'
        - $ref: '#/components/parameters/TailBlockHash'
      responses:
        200:
          description: Successfully fetched requested block metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfBlocks'
        default:
          $ref: '#/components/responses/Error'


  /datasets/{datasetId}/checkpoints:
    get:
      operationId: rest.dataset.get_checkpoints
      security:
        - odf_access_token: []
      parameters:
        - $ref: '#/components/parameters/DatasetId'
        - $ref: '#/components/parameters/StartBlockHash'
        - $ref: '#/components/parameters/BlocksCount'

      responses:
        200:
          description: Successfully fetched requested checkpoints information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfCheckpointInfos'
        default:
          $ref: '#/components/responses/Error'


  /datasets/{datasetId}/data_slices:
    get:
      operationId: rest.dataset.get_data_slices
      security:
        - odf_access_token: []
      parameters:
        - $ref: '#/components/parameters/DatasetId'
        - $ref: '#/components/parameters/StartBlockHash'
        - $ref: '#/components/parameters/BlocksCount'
      responses:
        200:
          description: Successfully fetched requested data slices information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfDataSliceInfos'
        default:
          $ref: '#/components/responses/Error'
